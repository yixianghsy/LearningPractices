<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.swotxu</groupId>
    <artifactId>swotxu</artifactId>
    <version>1.0-SNAPSHOT</version>
    <!-- 将当前项目定义为pom -->
    <packaging>pom</packaging>
    <name>swotxu</name>

    <!--指定当前项目继承spring-boot-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!--项目中依赖版本统一管理-->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <springboot.version>2.2.1.RELEASE</springboot.version>
        <mybatis.version>2.1.1</mybatis.version>
        <lombok.version>1.18.10</lombok.version>
        <junit.version>4.12</junit.version>
    </properties>

    <!--注册子项目 后面创建二级子项目后，需在父项目中注册-->
    <modules>
        <!--<module>swotxu-common</module>-->
        <!--<module>swotxu-webbase</module>-->
        <module>common</module>
    </modules>

    <!--
    	父项目引用依赖
        注：父项目依赖引用有两种方式
        1、使用此方式进行依赖管理时，父项目相当于一个依赖发布工厂。
            子项目需要哪些依赖，需要手动指定引入，无法继承父项目依赖直接使用
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-web</artifactId>
                        <version>${springboot.version}</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
         2、使用此方式经行依赖管理时，子项目无需手动指定依赖引入，
            会自动继承父依赖直接使用。
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-web</artifactId>
                    <version>${springboot.version}</version>
                </dependency>
            </dependencies>
    -->
    <dependencyManagement>
        <dependencies>
            <!-- web组件 -->
<!--            <dependency>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-starter-web</artifactId>-->
<!--                <version>${springboot.version}</version>-->
<!--            </dependency>-->

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${springboot.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.junit.vintage</groupId>
                        <artifactId>junit-vintage-engine</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- 资源文件拷贝插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!-- java编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
